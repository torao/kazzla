/* Copyright (C) 2012 BJöRFUAN
 * This source and related resources are distributed under Apache License, Version 2.0.
 */
package com.kazzla.drpc

import async.RawBuffer

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Protocol
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/**
 * プロシジャコールのためのプロトコルを実装するためのトレイトです。
 * インスタンスは 1 接続に対するスコープを持つため内部にバッファリングすることができます。
 * @author Takami Torao
 */
trait Protocol {

	// ========================================================================
	// バッファの作成
	// ========================================================================
	/**
	 * RPC のための呼び出し要求用のバイナリを作成します。
	 */
	def pack(call:Call):Array[Byte]

	// ========================================================================
	// バッファの作成
	// ========================================================================
	/**
	 * RPC 呼び出し結果用のバイナリを作成します。
	 */
	def pack(result:Result):Array[Byte]

	// ========================================================================
	// バッファの復元
	// ========================================================================
	/**
	 * 指定されたバッファから転送オブジェクトを復元します。
	 */
	def unpack(buffer:RawBuffer):Seq[Transferable]

}
